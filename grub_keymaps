#!/bin/sh
#I also wish this package was in core: https://aur.archlinux.org/packages/ckbcomp
#It allows for actually setting/converting keymaps for Grub2 (useful to edit launch or command line rescue). 
#Is just a large perl translation script for keys. (I use french keyboards often.)  
#Used by  `grub-mklayout` under the hood so that fails without the underlying AUR package.
# script to set the keymap properly in grub2
# heavily inspired by fitzcarraldoblog cheers (void users for the win)

GRUB_DEF="/etc/default/grub"
GRUB_LAY="/boot/grub/layouts"
GRUB_CFG="/boot/grub/grub.cfg"
BOOT_DIR="/boot/efi"
LOCALE=$(locale | grep "^LANG=" | sed 's/LANG=//; s/\.UTF-8.*//')
KB_LAYOUT=$(localectl status | grep "VC Keymap" | cut -d':' -f2 | tr -d ' ')
### Pre-checks
# Check if running as root
if [[ $EUID -ne 0 ]]; then
    echo "This script must be run as root (use sudo)"
    exit 1
fi

# Get the original user who invoked sudo
SUDO_USER=${SUDO_USER:-$USER}
if [[ "$SUDO_USER" == "root" ]]; then
    echo "Please run this script with sudo from a regular user account"
    exit 1
fi

### S1 ckbcomp
# Check if ckbcomp is installed
if command -v ckbcomp >/dev/null 2>&1; then
    echo "ckbcomp is already installed"
else
    # Create temporary build directory and make it user-writable
    TMPDIR=$(mktemp -d -p /tmp "${SUDO_USER}_ckbcomp.XXXXXX")
    chown -R "$SUDO_USER:$SUDO_USER" "$TMPDIR"
    cd "$TMPDIR" || exit 1

    echo "Downloading ckbcomp from AUR..."
    sudo -u "$SUDO_USER" curl -sL https://aur.archlinux.org/cgit/aur.git/snapshot/ckbcomp.tar.gz | sudo -u "$SUDO_USER" tar xz

    if [ ! -d "ckbcomp" ]; then
        echo "Error: Failed to extract ckbcomp package"
        rm -rf "$TMPDIR"
        exit 1
    fi

    cd ckbcomp || exit 1
    echo "Building ckbcomp as user $SUDO_USER..."

    # Build and install non-interactively
    sudo -u "$SUDO_USER" env BUILDDIR="$TMPDIR" makepkg -si --noconfirm

    echo "ckbcomp installation complete"
    rm -rf "$TMPDIR"
fi
### S2 prepare files for grub
mkdir -p $GRUB_LAY
### S2.1 gen layout compatible with grub
# this might generate a bunch of errors since grub only supports 1-127. but this is fine for standard terminal use.
# basically just a large perl script that lists all the translated keys to standard value
ckbcomp $KB_LAYOUT | grub-mklayout -o $GRUB_LAY/$KB_LAYOUT.gkb
### S3 modify grub files
if grep -q "GRUB_TERMINAL_INPUT.*console" $GRUB_DEF; then
    echo "Found console setting, replacing to keybaord..."
    sed -i 's/=console/=at_keyboard/g' $GRUB_DEF
else
    echo "Console setting not found or already modified, skipping."
fi
if ! grep -q "insmod keylayouts" /etc/grub.d/40_custom; then
    echo "adding mods to grub custom"
    tee -a /etc/grub.d/40_custom << EOF
insmod keylayouts
keymap \$prefix/layouts/$KB_LAYOUT.gkb
EOF
else
    echo "insmod already set. skipping."
fi
### S4 modify some more and apply
# Add to GRUB if not already there
if ! grep -q "locale=$LOCALE" $GRUB_DEF; then
    echo "adding locale line to grub"
    sed -i "s/GRUB_CMDLINE_LINUX_DEFAULT=\"/&locale=$LOCALE /" $GRUB_DEF
else
    echo "cmd line already found. skipping."
fi
grub-mkconfig -o $GRUB_CFG


